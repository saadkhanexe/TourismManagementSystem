package com.tourist.util;

import com.itextpdf.text.*;
import com.itextpdf.text.pdf.*;

import com.tourist.dao.*;
import com.tourist.dto.*;

import java.io.OutputStream;
import java.text.SimpleDateFormat;
import java.util.Date;

public class PdfGeneratorUtil {

    public static void generateReceiptPdf(OutputStream out, int bookingId) throws Exception {
        // DAO setup
        BookingImplementation bookingDAO = new BookingImplementation();
        DestinationImplementation destinationDAO = new DestinationImplementation();
        ResortImplementation resortDAO = new ResortImplementation();
        RestaurantImplementation restaurantDAO = new RestaurantImplementation();
        ItineraryImplementation itineraryDAO = new ItineraryImplementation();
        TouristImplementation touristDAO = new TouristImplementation();

        Booking booking = bookingDAO.getBooking(bookingId);
        if (booking == null) {
            throw new Exception("Booking not found with ID: " + bookingId);
        }

        // Fetch related entities
        Destination destination = destinationDAO.getDestination(booking.getDestination_id());
        Resort resort = resortDAO.getResort(booking.getResort_id());
        Restaurant restaurant = restaurantDAO.getRestaurant(booking.getRestaurant_id());
        Itinerary itinerary = itineraryDAO.getItineraryById(booking.getItinerary_id());
        Tourist tourist = touristDAO.getTourist(booking.getTourist_id());

        Document document = new Document();
        PdfWriter writer = PdfWriter.getInstance(document, out);

        // Page footer
        writer.setPageEvent(new PdfPageEventHelper() {
            public void onEndPage(PdfWriter writer, Document document) {
                Phrase footer = new Phrase("Page " + writer.getPageNumber(), FontFactory.getFont(FontFactory.HELVETICA, 9));
                ColumnText.showTextAligned(writer.getDirectContent(), Element.ALIGN_CENTER,
                        footer, (document.right() - document.left()) / 2 + document.leftMargin(), document.bottom() - 10, 0);
            }
        });

        document.open();

        // Fonts
        Font titleFont = FontFactory.getFont(FontFactory.HELVETICA_BOLD, 20);
        Font sectionFont = FontFactory.getFont(FontFactory.HELVETICA_BOLD, 14, BaseColor.BLUE);
        Font normalFont = FontFactory.getFont(FontFactory.HELVETICA, 12);

        // Logo (optional)
        try {
            Image logo = Image.getInstance("./Images/Saad-removebg-preview.png");
            logo.scaleToFit(100, 100);
            logo.setAlignment(Image.ALIGN_CENTER);
            document.add(logo);
        } catch (Exception e) {
            // Skip logo if not found
        }

        // Title & Info
        document.add(new Paragraph("Booking Receipt", titleFont));
        document.add(new Paragraph("Generated by Saad Travels", normalFont));
        document.add(new Paragraph("Generated on: " + new SimpleDateFormat("dd MMM yyyy, HH:mm:ss").format(new Date()), normalFont));
        document.add(new Paragraph("Tourist Name: " + (tourist != null ? tourist.getName() : "N/A"), normalFont));
        document.add(Chunk.NEWLINE);

        // Booking Info Table
        document.add(new Paragraph("Booking Details", sectionFont));
        PdfPTable bookingTable = new PdfPTable(2);
        bookingTable.setWidthPercentage(100);
        bookingTable.addCell("Booking ID");
        bookingTable.addCell(String.valueOf(booking.getBookingId()));
        bookingTable.addCell("Tourist ID");
        bookingTable.addCell(String.valueOf(booking.getTourist_id()));
        bookingTable.addCell("Booking Date");
        bookingTable.addCell(String.valueOf(booking.getBooking_date()));
        bookingTable.addCell("Status");
        bookingTable.addCell(booking.getStatus());
        bookingTable.addCell("Price");
        bookingTable.addCell("₹" + booking.getPrice());
        bookingTable.addCell("Remarks");
        bookingTable.addCell(booking.getRemarks() != null ? booking.getRemarks() : "N/A");
        document.add(bookingTable);
        document.add(Chunk.NEWLINE);

        // Destination Info
        document.add(new Paragraph("Destination Details", sectionFont));
        PdfPTable destinationTable = new PdfPTable(2);
        destinationTable.setWidthPercentage(100);
        destinationTable.addCell("Name");
        destinationTable.addCell(destination != null ? destination.getDestination_name() : "N/A");
        destinationTable.addCell("Description");
        destinationTable.addCell(destination != null ? destination.getDestination_description() : "N/A");
        document.add(destinationTable);
        document.add(Chunk.NEWLINE);

        // Resort Info
        document.add(new Paragraph("Resort Details", sectionFont));
        PdfPTable resortTable = new PdfPTable(2);
        resortTable.setWidthPercentage(100);
        resortTable.addCell("Name");
        resortTable.addCell(resort != null ? resort.getName() : "N/A");
        resortTable.addCell("Type");
        resortTable.addCell(resort != null ? resort.getType() : "N/A");
        resortTable.addCell("Rating");
        resortTable.addCell(String.valueOf(resort != null ? resort.getRating() : "N/A"));
        resortTable.addCell("Price");
        resortTable.addCell(resort != null ? "₹" + resort.getResort_price() : "N/A");
        document.add(resortTable);
        document.add(Chunk.NEWLINE);

        // Restaurant Info
        document.add(new Paragraph("Restaurant Details", sectionFont));
        PdfPTable restaurantTable = new PdfPTable(2);
        restaurantTable.setWidthPercentage(100);
        restaurantTable.addCell("Name");
        restaurantTable.addCell(restaurant != null ? restaurant.getName() : "N/A");
        restaurantTable.addCell("Cuisine");
        restaurantTable.addCell(restaurant != null ? restaurant.getCuisine_type() : "N/A");
        restaurantTable.addCell("Rating");
        restaurantTable.addCell(String.valueOf(restaurant != null ? restaurant.getRating() : "N/A"));
        restaurantTable.addCell("Price");
        restaurantTable.addCell(restaurant != null ? "₹" + restaurant.getRestaurant_price() : "N/A");
        document.add(restaurantTable);
        document.add(Chunk.NEWLINE);

        // Itinerary Info
        if (itinerary != null) {
            document.add(new Paragraph("Itinerary Details", sectionFont));
            document.add(new Paragraph("Price: ₹" + itinerary.getItinerary_price(), normalFont));
            if (itinerary.getItinerary_day1() != null)
                document.add(new Paragraph(itinerary.getItinerary_day1() + ": " + itinerary.getItinerary_day1_description(), normalFont));
            if (itinerary.getItinerary_day2() != null)
                document.add(new Paragraph(itinerary.getItinerary_day2() + ": " + itinerary.getItinerary_day2_description(), normalFont));
            if (itinerary.getItinerary_day3() != null)
                document.add(new Paragraph(itinerary.getItinerary_day3() + ": " + itinerary.getItinerary_day3_description(), normalFont));
            if (itinerary.getItinerary_day4() != null)
                document.add(new Paragraph(itinerary.getItinerary_day4() + ": " + itinerary.getItinerary_day4_description(), normalFont));
            if (itinerary.getItinerary_day5() != null)
                document.add(new Paragraph(itinerary.getItinerary_day5() + ": " + itinerary.getItinerary_day5_description(), normalFont));
        }

        // Closing Message
        document.add(Chunk.NEWLINE);
        document.add(new Paragraph("Thank you for choosing our service!", sectionFont));
        document.add(Chunk.NEWLINE);
        document.add(new Paragraph("Signature: SAAD TRAVELS", normalFont));

        document.close();
    }
}
